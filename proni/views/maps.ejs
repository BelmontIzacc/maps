<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=devide-width, initial-scale=1.0">
    <meta http-equiv="X-UA-compatible" content="ie=edge">
    <title>PRONI</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
        integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/css/bootstrap.min.css"
        integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
    <link rel="stylesheet" href="/css/maps.css">
    <link rel="stylesheet" href="/img">
</head>

<body>

    <nav class="navbar sticky-top navbar-dark bg-dark">
        <a class="navbar-brand" href="/vsts/vaneSoftecSolutions" style="max-width: 100%; word-wrap: break-word; white-space: normal;">Mapa de evaluaciones de inglés en escuelas primarias</a>
        <div>
            <button class="btn btn-secondary" type="button"
               aria-haspopup="true" data-display="static">
                <img src="/icon/search.svg" alt="Buscar" width="25px"> Buscar
            </button>
            <button class="btn btn-secondary" type="button"
               aria-haspopup="true" data-display="static" onclick="general('detalles')">
                <img src="/icon/general.svg" alt="Buscar" width="25px"> General
            </button>
            <button class="btn btn-secondary" type="button"
                aria-haspopup="true" data-display="static" onclick="general('zona')">
                    <img src="/icon/zona.svg" alt="Zona" width="25px"> Zona
            </button> 
            <button class="btn btn-secondary" type="button"
                aria-haspopup="true" data-display="static" onclick="general('municipio')">
                    <img src="/icon/municipio.svg" alt="Municipio" width="25px"> Municipio
            </button>
        </div>
        <div class="dropdown">
            <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton"
                data-toggle="dropdown" aria-haspopup="true" data-display="static" aria-expanded="false">
                <img src="/icon/map.svg" alt="Icono">
            </button>
            <div class="dropdown-menu  dropdown-menu-left dropdown-menu-lg-right" aria-labelledby="dropdownMenuButton">
                <button class="dropdown-item btn btn-secondary" id="escuela">Escuelas</button>
                <button class="dropdown-item btn btn-secondary" id="municipios">Municipios</button>
                <button class="dropdown-item btn btn-secondary" id="zona">Zona</button>
                <div class="dropdown-divider"></div>
                <button class="dropdown-item btn btn-secondary" id="todos">Todos</button>
            </div>
        </div>
    </nav>

    <div id="map-template"></div>

    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
        integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>

    <script>
        var map = L.map('map-template').setView([24.549206001525945, -98.5387627734083], 7);

        const tileURL2 = 'https://b.tile.openstreetmap.org/{z}/{x}/{y}.png'

        const tile = L.tileLayer(tileURL2, { attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors' });

        // Geolocation
        map.locate({ enableHighAccuracy: true })
        map.on('locationfound', (e) => {
            const coords = [e.latlng.lat, e.latlng.lng];
            const newMarker = L.marker(coords);
            newMarker.bindPopup('You are Here!');
            map.addLayer(newMarker);
        });

        map.addLayer(tile);
    </script>

    <script>

        let flagEscuela = true;
        let flagMunicipio = true;
        let flagZona = true;

        let statesLayer;
        let zonasLayer;
        const markersArray = [];

        function mostrarEscuelas() {
            if (flagEscuela) {
                const escuelas = <%- JSON.stringify(marks) %>;

                escuelas.forEach(esc => {
                    const configIcon = L.icon({
                        iconUrl: esc.iconUrl,
                        iconSize: esc.iconSize,
                        // iconAnchor: esc.iconAnchor,
                        popupAnchor: esc.popupAnchor
                    });
                    const marker = L.marker(esc.coordenadas, { icon: configIcon }); // [23.72713374, -99.15116719]
                    const detalle = '<h5 style="margin-bottom: initial; ">' + esc.nombre + '</h5> <small>' + esc.municipio + '</small> <ul> <li>Punto 1</li> <li>Punto 2</li> <li>Punto 3</li> <li>Punto 4</li> <li>Punto 5</li> </ul>' + '<br> <a href="/vsts/proni/escuela/' + esc.oid + '/' + esc.clave + '">Detalles</a> ';
                    // marker.bindPopup(esc.nombre + ' | ' + esc.municipio + '<br> <a href="/vsts/proni/' + esc.clave + '">Website</a> ');
                    marker.bindPopup(detalle);
                    marker.on('click', function() {
                        const municipiosData = <%- JSON.stringify(municipios) %>;
                        const municipio = municipiosData.find( data => data.oid == esc.oid);
                        info.update(municipio.feature.properties);
                    });

                    map.addLayer(marker);
                    markersArray.push(marker);

                    /*
                    const municipiosData = <%- JSON.stringify(municipios) %>;
                    const municipio = municipiosData.find( data => data.oid == esc.oid);
                    info.update(municipio.feature.properties);
                    */
                    info.update();
                });
                flagEscuela = false;
            } else {
                markersArray.forEach(marker => {
                    map.removeLayer(marker);
                });
                flagEscuela = true;
            }
        }

        var info = L.control();

        info.onAdd = function (map) {
            this._div = L.DomUtil.create('div', 'info'); // create a div with a class "info"
            this.update();
            return this._div;
        };

        // method that we will use to update the control based on feature properties passed
        info.update = function (props) {
            if (props) {
                if (props.zona) {
                    this._div.innerHTML = '<h4>' + props.name + '</h4>' +
                    '<b>' + props.zona + '</b><br /><br />' +
                    "Cantidad " + '<br />' +
                    "Escuelas: <b>"+ props.noEscuelas + '</b><br />' + 
                    "Alumnos: <b>"+ props.noAlumnos + '</b><br />' + 
                    "Niñas: <b>"+ props.generos.girls + '</b><br />' + 
                    "Niños: <b>"+ props.generos.boys + '</b><br />' + 
                    "<br> Secciones " + ' <br />' +
                    "Mejor: <b>"+ props.topSeccion.mejor + '</b><br />' + 
                    "Peor: <b>"+ props.topSeccion.peor + '</b> <br>' +
                    '<br> <a href="/vsts/proni/municipio/' + props.oid + '/0">Detalles</a> ';
                } else {
                    this._div.innerHTML = '<h4>' + "Zona &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;" + '</h4>' +
                    '<b>' + props.name + '</b><br /><br />' + 
                    "Mejor escuela <br /><b>"+ props.mejorEscuela + '</b><br />' +
                    "<br> Cantidad " + ' <br />' +
                    "Escuelas: <b>"+ props.noEscuelas + '</b><br />' + 
                    "Alumnos: <b>"+ props.noAlumnos + '</b><br />' + 
                    "Municipios: <b>"+ props.noMunicipios + '</b><br />' +
                    "Niñas: <b>"+ props.generos.girls + '</b><br />' + 
                    "Niños: <b>"+ props.generos.boys + '</b><br />' + 
                    "<br> Secciones " + ' <br />' +
                    "Mejor: <b>"+ props.topSeccion.mejor + '</b><br />' + 
                    "Peor: <b>"+ props.topSeccion.peor+ '</b> <br>' +
                    '<br> <a href="/vsts/proni/zona/' + props.name + '/0">Detalles</a> ';
                }
            } else {
                this._div.innerHTML = 'Coloca el cursor sobre una zona o municipio';
            }
        }

        info.addTo(map);

        function getColor(d) {
            return d == 'CD. VICTORIA' ? '#1976D2' :
                d == 'TULA' ? '#3F51B5' :
                    d == 'PADILLA' ? '#FF5722' :
                        d == 'SOTO LA MARINA' ? '#009688' :
                            d == 'ALTAMIRA' ? '#60D394' :
                                d == 'TAMPICO' ? '#45CCB3' :
                                    d == 'CD. MADERO' ? '#33FF57' :
                                        d == 'MATAMOROS' ? '#FFFF00' :
                                            d == 'RIO BRAVO' ? '#333333' :
                                                d == 'REYNOSA' ? '#E74C3C' :
                                                    d == 'NVO. LAREDO' ? '#7E349D' :
                                                        d == 'Zona A' ? '#00AFAF' :
                                                            d == 'Zona B' ? '#00AF89' :
                                                                d == 'Zona C' ? '#00AF66' :
                                                                    '#FFEDA0';
        }

        function style(feature) {
            return {
                fillColor: getColor(feature.properties.name),
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7
            };
        }

        function highlightFeature(e) {
            var layer = e.target;

            layer.setStyle({
                weight: 5,
                color: '#666',
                dashArray: '',
                fillOpacity: 0.7
            });

            layer.bringToFront();
            info.update(layer.feature.properties);
        }

        function resetHighlight(e) {
            if(zonasLayer){
                zonasLayer.resetStyle(e.target);
            }
            if(statesLayer){
                statesLayer.resetStyle(e.target); 
            }
            // info.update();
        }

        function zoomToFeature(e) {
            map.fitBounds(e.target.getBounds());
        }

        function onEachFeature(feature, layer) {
            layer.on({
                mouseover: highlightFeature,
                mouseout: resetHighlight,
                click: zoomToFeature
            });
        }

        function mostrarMunicipio() {
            if (flagMunicipio) {
                const statesData = <%- JSON.stringify(statesData) %>;
                statesLayer = L.geoJson(statesData, { style: style, onEachFeature: onEachFeature }).addTo(map);
                flagMunicipio = false;
            } else {
                statesLayer.remove();
                flagMunicipio = true;
            }
        }

        function mostrarZona() {
            if (flagZona) {
                const zonaData = <%- JSON.stringify(zonaData) %>;
                zonasLayer = L.geoJson(zonaData, { style: style, onEachFeature: onEachFeature }).addTo(map);
                flagZona = false;
            } else {
                zonasLayer.remove();
                flagZona = true;
            }
        }

        document.addEventListener("DOMContentLoaded", function () {
            const dropdownItems = document.querySelectorAll(".dropdown-item");

            dropdownItems.forEach(function (item) {
                item.addEventListener("click", function () {
                    const selectedItem = item.id;
                    switch (selectedItem) {
                        case "escuela":
                            mostrarEscuelas();
                            break;
                        case "municipios":
                            info.update();
                            mostrarMunicipio();
                            break;
                        case "zona":
                            info.update();
                            mostrarZona();
                            break;
                        case "todos":
                            info.update();
                            mostrarEscuelas();
                            mostrarMunicipio();
                            mostrarZona();
                            break;
                    }
                });
            });
        });
    </script>

    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
        integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.14.7/dist/umd/popper.min.js"
        integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.3.1/dist/js/bootstrap.min.js"
        integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
        crossorigin="anonymous"></script>

    <script>
        function general(area) {
            let url = 'proni/general/'+area
            // Crear un enlace temporal
            let enlaceTemporal = document.createElement('a');
            enlaceTemporal.href = url;

            // Simular clic en el enlace para iniciar la descarga
            document.body.appendChild(enlaceTemporal);
            enlaceTemporal.click();
            document.body.removeChild(enlaceTemporal);
        }
        </script>
</body>

</html>